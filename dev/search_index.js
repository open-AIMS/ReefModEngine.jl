var documenterSearchIndex = {"docs":
[{"location":"api/#API","page":"API","title":"API","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Modules = [ReefModEngine]","category":"page"},{"location":"api/#ReefModEngine.DataCube-Tuple{AbstractArray}","page":"API","title":"ReefModEngine.DataCube","text":"DataCube(data::AbstractArray; kwargs...)::YAXArray\n\nConstructor for YAXArray. When used with axes_names, the axes labels will be UnitRanges from 1 up to that axis length.\n\nArguments\n\ndata : Array of data to be used when building the YAXArray\naxes_names :\n\n\n\n\n\n","category":"method"},{"location":"api/#ReefModEngine.area_needed-Tuple{Int64, Float64}","page":"API","title":"ReefModEngine.area_needed","text":"area_needed(n_corals::Int64, density::Float64)::Float64\n\nDetermine area needed to deploy the given number of corals at the specified density.\n\n\n\n\n\n","category":"method"},{"location":"api/#ReefModEngine.deployment_area-Tuple{Int64, Int64, Float64, Vector{Float64}}","page":"API","title":"ReefModEngine.deployment_area","text":"deployment_area(n_corals::Int64, max_n_corals::Int64, density::Float64, target_areas::Vector{Float64})::Tuple{Float64,Float64}\n\nDetermine deployment area for the expected number of corals to be deployed.\n\nArguments\n\nn_corals : Number of corals,\nmax_n_corals : Expected maximum deployment effort (total number of corals in intervention set)\ndensity : Stocking density\ntarget_areas : Available area at target location(s)\n\nReturns\n\nTuple\n\nPercent area of deployment\nmodified stocking density\n\n\n\n\n\n","category":"method"},{"location":"api/#ReefModEngine.init_rme-Tuple{String}","page":"API","title":"ReefModEngine.init_rme","text":"init_rme(rme_path::String)::Nothing\n\nInitialize ReefMod Engine for use.\n\n\n\n\n\n","category":"method"},{"location":"api/#ReefModEngine.match_id-Tuple{String}","page":"API","title":"ReefModEngine.match_id","text":"match_id(id::String)::Int64\nmatch_ids(ids::Vector{String})::Vector{Int64}\n\nFind matching index position for the given ID(s) according to ReefMod Engine's reef list.\n\nNote\n\nReefMod Engine's reef list is in all upper case. The provided IDs are converted to upper case to ensure a match.\n\nExamples\n\njulia> reef_ids()\n# 3806-element Vector{String}:\n#  \"10-330\"\n#  \"10-331\"\n#  ⋮\n#  \"23-048\"\n#  \"23-049\"\n\njulia> match_id(\"10-330\")\n#  1\n\njulia> match_id(\"23-049\")\n#  3806\n\njulia> match_ids([\"23-048\", \"10-331\"])\n#  3805\n#  2\n\n\n\n\n\n","category":"method"},{"location":"api/#ReefModEngine.reef_ids-Tuple{}","page":"API","title":"ReefModEngine.reef_ids","text":"reef_ids()::Vector{String}\n\nGet list of reef ids in the order expected by ReefMod Engine.\n\n\n\n\n\n","category":"method"},{"location":"api/#ReefModEngine.reset_rme-Tuple{}","page":"API","title":"ReefModEngine.reset_rme","text":"reset_rme()\n\nReset ReefModEngine, clearing any and all interventions and reef sets.\n\n\n\n\n\n","category":"method"},{"location":"api/#ReefModEngine.set_enrichment_deployment!-Tuple{String, String, Int64, Int64, Vector{Float64}, Float64}","page":"API","title":"ReefModEngine.set_enrichment_deployment!","text":"set_enrichment_deployment!(\n    name::String,\n    reefset::String,\n    n_larvae::Int64,\n    year::Int64,\n    area_km2::Vector{Float64},\n    density::Float64\n)::Nothing\n\nAs set_seeding_deployment() but for larvae enrichment (also known as assisted migration). Set deployment for a single target year.\n\nset_enrichment_deployment!(\n    name::String,\n    reefset::String,\n    n_larvae::Int64,\n    max_effort::Int64,\n    first_year::Int64,\n    last_year::Int64,\n    year_step::Int64,\n    area_km2::Vector{Float64},\n    density::Float64\n)::Nothing\n\nSet deployment for multiple years at a given frequency.\n\n\n\n\n\n","category":"method"},{"location":"api/#ReefModEngine.set_outplant_deployment!-Tuple{String, String, Int64, Int64, Vector{Float64}, Float64}","page":"API","title":"ReefModEngine.set_outplant_deployment!","text":"set_outplant_deployment!(name::String, reefset::String, n_corals::Int64, year::Int64, area_km2::Vector{Float64}, density::Float64)::Nothing\n\nSet outplanting deployments for a single year.\n\nArguments\n\nname : Name to assign intervention event\nreefset : Name of pre-defined list of reefs to intervene on\nn_corals : Number of corals to outplant\nyear : Year to intervene\narea_km2 : Area to intervene [km²]\ndensity : Stocking density of intervention [corals / m²]\nsetoutplantdeployment!(name::String, reefset::String, ncorals::Int64, maxeffort::Int64, firstyear::Int64, lastyear::Int64, yearstep::Int64, areakm2::Vector{Float64}, density::Float64)::Nothing\n\nSet outplanting deployments across a range of years.\n\nArguments\n\nname : Name to assign intervention event\nreefset : Name of pre-defined list of reefs to intervene on\nn_corals : Number of corals to outplant for a given year\nmax_effort : Total number of corals to outplant\nfirst_year : First year to start interventions\nlast_year : Final year of interventions\nyear_step : Frequency of intervention (1 = every year, 2 = every second year, etc)\narea_km2 : Intervention area [km²]\ndensity : Stocking density of intervention [corals / m²]\n\n\n\n\n\n","category":"method"},{"location":"getting_started/#Usage-example","page":"Usage example","title":"Usage example","text":"","category":"section"},{"location":"getting_started/","page":"Usage example","title":"Usage example","text":"using ReefModEngine\nusing CSV, DataFrames, MAT\n\n# Initialize RME (may take a minute or two)\ninit_rme(\"path to RME directory\")\n# [ Info: Loaded RME 1.0.28\n\n# Set to use two threads\nset_option(\"thread_count\", 2)\n\n# Load target intervention locations determined somehow (e.g., by ADRIA)\n# The first column is simply the row number.\n# The second column is a list of target reef ids matching the format as found in\n# the id list file (the file is found under `data_files/id` of the RME data set)\ndeploy_loc_details = CSV.read(\"target_locations.csv\", DataFrame, header=[\"index_id\", \"reef_id\"])\n\nname = \"Example\"\nstart_year = 2022\nend_year = 2099\nRCP_scen = \"SSP 2.45\"\ngcm = \"CNRM_ESM2_1\"\nreps = 2\nn_reefs = 3806\n\n# Get list of reef ids as specified by ReefMod Engine\nreef_id_list = reef_ids()\n\n# Reef indices and IDs\ntarget_reef_idx = deploy_loc_details.index_id\ntarget_reef_ids = deploy_loc_details.reef_id\nn_target_reefs = length(target_reef_idx)\n\n# Get reef areas from RME\nreef_areas = zeros(n_reefs)\n@RME reefAreasKm2(reef_areas::Ptr{Cdouble}, n_reefs::Cint)::Cint\n\n# Get list of areas for the target reefs\ntarget_reef_areas_km² = reef_areas[target_reef_idx]\nd_density_m² = 6.8  # coral seeding density (per m²)\n\n# Initialize result store\nresult_store = ResultStore(start_year, end_year, n_reefs, reps)\n# Outputs:\n# ReefModEngine Result Store\n#\n# Each store holds data for `:ref` and `:iv` across:\n# 2022 to 2099 (78 years)\n# For 2 repeats.\n#\n# cover : (78, 3806, 2)\n# dhw : (78, 3806, 2)\n# dhw_mortality : (78, 3806, 2)\n# cyc_mortality : (78, 3806, 2)\n# cyc_cat : (78, 3806, 2)\n# cots : (78, 3806, 2)\n# cots_mortality : (78, 3806, 2)\n# species : (78, 3806, 6, 2)\n\n@info \"Starting runs\"\n@RME ivRemoveAll()::Cvoid\n@RME reefSetRemoveAll()::Cint\n\n# Note: if the Julia runtime crashes, check that the specified data file location is correct\n@RME runCreate(name::Cstring, start_year::Cint, end_year::Cint, RCP_scen::Cstring, gcm::Cstring, reps::Cint)::Cint\n\n# Add 3 DHW enhancement to outplanted corals\nset_option(\"restoration_dhw_tolerance_outplants\", 3)\n\n# Create a reef set using the target reefs\n@RME reefSetAddFromIdList(\"iv_moore\"::Cstring, target_reef_ids::Ptr{Cstring}, length(target_reef_ids)::Cint)::Cint\n\n# Deployments occur between 2025 2030\n# Year 1: 100,000 outplants; Year 2: 500,000; Year 3: 1,1M; Year 4: 1,1M; Year 5: 1,1M and Year 6: 1,1M.\nset_outplant_deployment!(\"outplant_iv_2026\", \"iv_moore\", 100_000, 2026, target_reef_areas_km², d_density_m²)\nset_outplant_deployment!(\"outplant_iv_2027\", \"iv_moore\", 500_000, 2027, target_reef_areas_km², d_density_m²)\nset_outplant_deployment!(\"outplant_iv_2028_2031\", \"iv_moore\", Int64(1.1 * 1e6), Int64(1.1 * 1e6)*3, 2028, 2031, 1, target_reef_areas_km², d_density_m²)\n\n@RME runInit()::Cint\n\n# Run all years and all reps\n@time @RME runProcess()::Cint\n\n# Collect and store results\ncollect_all_results!(result_store, start_year, end_year, reps)\n\n# Save results to matfile with entries (matching ReefMod Engine standard names)\n# coral_cover_ref\n# coral_cover_iv\n# dhw_ref\n# dhw_iv\n# dhwloss_ref\n# dhwloss_iv\n# cyc_ref\n# cyc_iv\n# cyccat_ref\n# cyccat_iv\n# cots_ref\n# cots_iv\n# cotsloss_ref\n# cotsloss_iv\n# species_ref\n# species_iv\nsave_to_mat(result_store)","category":"page"},{"location":"#ReefModEngine.jl","page":"ReefModEngine.jl","title":"ReefModEngine.jl","text":"","category":"section"},{"location":"","page":"ReefModEngine.jl","title":"ReefModEngine.jl","text":"A Julia interface to the ReefMod Engine (RME) C++ API.","category":"page"},{"location":"","page":"ReefModEngine.jl","title":"ReefModEngine.jl","text":"Targets RME v1.0, and provides some convenience functions for outplanting interventions. All other functions are accessible via the @RME macro.","category":"page"},{"location":"","page":"ReefModEngine.jl","title":"ReefModEngine.jl","text":"The RME library, accompanying dataset, and RME documentation has to be requested from RME developers.","category":"page"}]
}
